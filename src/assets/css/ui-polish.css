/**
 * UI Polish Styles
 * Loading states, skeleton screens, microanimations, and enhanced visual feedback
 */

/* ===== LOADING STATES ===== */

/* Loading Spinner */
.loading-spinner {
  display: inline-block;
  width: 1.5rem;
  height: 1.5rem;
  border: 3px solid rgba(var(--color-primary-rgb), 0.2);
  border-top-color: var(--color-primary);
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
}

.loading-spinner--small {
  width: 1rem;
  height: 1rem;
  border-width: 2px;
}

.loading-spinner--large {
  width: 3rem;
  height: 3rem;
  border-width: 4px;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Loading Overlay */
.loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(4px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease;
}

.loading-overlay.active {
  opacity: 1;
  pointer-events: all;
}

.loading-overlay__content {
  background: var(--color-surface);
  padding: 2rem;
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-xl);
  text-align: center;
  transform: scale(0.9);
  transition: transform 0.3s ease;
}

.loading-overlay.active .loading-overlay__content {
  transform: scale(1);
}

.loading-overlay__text {
  margin-top: 1rem;
  font-weight: 500;
  color: var(--color-text);
}

/* ===== SKELETON SCREENS ===== */

.skeleton {
  background: linear-gradient(
    90deg,
    var(--color-border) 0%,
    var(--color-surface) 50%,
    var(--color-border) 100%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s ease-in-out infinite;
  border-radius: var(--radius-md);
}

@keyframes shimmer {
  0% { background-position: -200% 0; }
  100% { background-position: 200% 0; }
}

.skeleton-card {
  padding: 1.5rem;
  margin-bottom: 1rem;
}

.skeleton-line {
  height: 1rem;
  margin-bottom: 0.75rem;
  border-radius: var(--radius-sm);
}

.skeleton-line--short {
  width: 60%;
}

.skeleton-line--medium {
  width: 80%;
}

.skeleton-circle {
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
}

/* ===== MICROANIMATIONS ===== */

/* Smooth Scale on Hover */
.scale-hover {
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.scale-hover:hover {
  transform: translateY(-2px) scale(1.02);
  box-shadow: var(--shadow-lg);
}

.scale-hover:active {
  transform: translateY(0) scale(0.98);
}

/* Ripple Effect */
.ripple {
  position: relative;
  overflow: hidden;
}

.ripple::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.5);
  transform: translate(-50%, -50%);
  transition: width 0.6s ease, height 0.6s ease;
}

.ripple:active::before {
  width: 300px;
  height: 300px;
}

/* Pulse Animation */
@keyframes pulse {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.05);
  }
}

.pulse {
  animation: pulse 2s ease-in-out infinite;
}

/* Bounce Animation */
@keyframes bounce {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

.bounce {
  animation: bounce 1s ease infinite;
}

/* Fade In Animation */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in {
  animation: fadeIn 0.3s ease forwards;
}

/* Slide In Animations */
@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.slide-in-left {
  animation: slideInLeft 0.4s ease forwards;
}

.slide-in-right {
  animation: slideInRight 0.4s ease forwards;
}

/* ===== ENHANCED EMPTY STATES ===== */

.empty-state-enhanced {
  text-align: center;
  padding: 4rem 2rem;
  color: var(--color-text-secondary);
}

.empty-state-enhanced__icon {
  font-size: 4rem;
  margin-bottom: 1.5rem;
  display: block;
  animation: bounce 2s ease-in-out infinite;
}

.empty-state-enhanced h3 {
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--color-text);
  margin-bottom: 0.75rem;
}

.empty-state-enhanced p {
  font-size: 1rem;
  margin-bottom: 2rem;
  max-width: 400px;
  margin-left: auto;
  margin-right: auto;
}

.empty-state-enhanced__actions {
  display: flex;
  gap: 1rem;
  justify-content: center;
  flex-wrap: wrap;
}

/* ===== ENHANCED TOOLTIPS ===== */

.tooltip-enhanced {
  position: relative;
}

.tooltip-enhanced::before,
.tooltip-enhanced::after {
  position: absolute;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease, transform 0.3s ease;
  z-index: 1000;
}

.tooltip-enhanced::before {
  content: attr(data-tooltip);
  bottom: 100%;
  left: 50%;
  transform: translate(-50%, -5px);
  padding: 0.5rem 0.75rem;
  background: var(--color-surface-dark);
  color: white;
  font-size: 0.875rem;
  white-space: nowrap;
  border-radius: var(--radius-md);
  margin-bottom: 8px;
  box-shadow: var(--shadow-lg);
}

.tooltip-enhanced::after {
  content: '';
  bottom: 100%;
  left: 50%;
  transform: translate(-50%, 5px);
  border: 6px solid transparent;
  border-top-color: var(--color-surface-dark);
  margin-bottom: 2px;
}

.tooltip-enhanced:hover::before,
.tooltip-enhanced:hover::after {
  opacity: 1;
  transform: translate(-50%, 0);
}

/* ===== PROGRESS INDICATORS ===== */

.progress-bar-enhanced {
  position: relative;
  height: 8px;
  background: var(--color-border);
  border-radius: var(--radius-full);
  overflow: hidden;
}

.progress-bar-enhanced__fill {
  height: 100%;
  background: linear-gradient(
    90deg,
    var(--color-primary),
    var(--color-accent)
  );
  border-radius: var(--radius-full);
  transition: width 0.5s ease;
  position: relative;
  overflow: hidden;
}

.progress-bar-enhanced__fill::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.3),
    transparent
  );
  animation: shimmer-progress 2s infinite;
}

@keyframes shimmer-progress {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

/* ===== ENHANCED BUTTONS ===== */

.btn-enhanced {
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.btn-enhanced::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.3);
  transform: translate(-50%, -50%);
  transition: width 0.6s ease, height 0.6s ease;
}

.btn-enhanced:active::before {
  width: 300px;
  height: 300px;
}

.btn-enhanced:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

.btn-enhanced:active {
  transform: translateY(0);
}

/* ===== SMOOTH TRANSITIONS ===== */

.smooth-all {
  transition: all 0.3s ease;
}

.smooth-transform {
  transition: transform 0.3s ease;
}

.smooth-opacity {
  transition: opacity 0.3s ease;
}

.smooth-color {
  transition: color 0.3s ease, background-color 0.3s ease;
}

/* ===== ENHANCED FOCUS STATES ===== */

.focus-enhanced:focus {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
  box-shadow: 0 0 0 4px rgba(var(--color-primary-rgb), 0.1);
}

.focus-enhanced:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

/* ===== CARD HOVER EFFECTS ===== */

.card-hover-effect {
  transition: all 0.3s ease;
  cursor: pointer;
}

.card-hover-effect:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-xl);
  border-color: var(--color-primary);
}

/* ===== SUCCESS/ERROR STATES ===== */

.state-success {
  background: var(--color-success-light) !important;
  border-color: var(--color-success) !important;
  animation: successPulse 0.5s ease;
}

.state-error {
  background: var(--color-danger-light) !important;
  border-color: var(--color-danger) !important;
  animation: errorShake 0.5s ease;
}

@keyframes successPulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.05); }
}

@keyframes errorShake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-10px); }
  75% { transform: translateX(10px); }
}

/* ===== STAGGER ANIMATION ===== */

.stagger-item {
  opacity: 0;
  animation: fadeIn 0.5s ease forwards;
}

.stagger-item:nth-child(1) { animation-delay: 0.1s; }
.stagger-item:nth-child(2) { animation-delay: 0.2s; }
.stagger-item:nth-child(3) { animation-delay: 0.3s; }
.stagger-item:nth-child(4) { animation-delay: 0.4s; }
.stagger-item:nth-child(5) { animation-delay: 0.5s; }
.stagger-item:nth-child(6) { animation-delay: 0.6s; }
.stagger-item:nth-child(7) { animation-delay: 0.7s; }
.stagger-item:nth-child(8) { animation-delay: 0.8s; }

/* ===== RESPONSIVE ADJUSTMENTS ===== */

@media (max-width: 768px) {
  .empty-state-enhanced {
    padding: 3rem 1rem;
  }
  
  .empty-state-enhanced__icon {
    font-size: 3rem;
  }
}

/* ===== ACCESSIBILITY IMPROVEMENTS ===== */

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* ===== DARK MODE ADJUSTMENTS ===== */

[data-theme="dark"] .skeleton {
  background: linear-gradient(
    90deg,
    var(--color-surface-dark) 0%,
    var(--color-border-dark) 50%,
    var(--color-surface-dark) 100%
  );
}

[data-theme="dark"] .loading-overlay__content {
  background: var(--color-surface-dark);
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.8);
}

[data-theme="dark"] .tooltip-enhanced::before {
  background: var(--color-surface);
  color: var(--color-text);
}

[data-theme="dark"] .tooltip-enhanced::after {
  border-top-color: var(--color-surface);
}